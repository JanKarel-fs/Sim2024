CMAKE_MINIMUM_REQUIRED(VERSION 3.1)

PROJECT(Sim2024)

IF(COMMAND cmake_policy)
   cmake_policy(SET CMP0012 NEW)
ENDIF(COMMAND cmake_policy)

SET(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -I.")
SET(CMAKE_C_FLAGS_DEBUG "${CMAKE_C_FLAGS_DEBUG} -g -O")
SET(CMAKE_C_FLAGS_RELEASE "${CMAKE_C_FLAGS_RELEASE} -O3")
SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -I.")
SET(CMAKE_CXX_FLAGS_DEBUG "${CMAKE_CXX_FLAGS_DEBUG} -g -O")
SET(CMAKE_CXX_FLAGS_RELEASE "${CMAKE_CXX_FLAGS_RELEASE} -O3")

SET(CMAKE_CXX_STANDARD 14)

FIND_PACKAGE(OpenMP)
IF(OPENMP_FOUND)
  SET(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} ${OpenMP_C_FLAGS}")
  SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} ${OpenMP_CXX_FLAGS}")
  SET(CMAKE_CXX_FLAGS_DEBUG "${CMAKE_CXX_FLAGS_DEBUG} ${OpenMP_CXX_FLAGS_DEBUG}")
  SET(CMAKE_CXX_FLAGS_RELEASE "${CMAKE_CXX_FLAGS_RELEASE} ${OpenMP_CXX_FLAGS_RELEASE}")
  SET(CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} ${OpenMP_EXE_LINKER_FLAGS}")
ENDIF(OPENMP_FOUND)

SET(DIRS fvm geometry saving sources)

INCLUDE_DIRECTORIES(${DIRS} ${PROJECT_SOURCE_DIR})
SUBDIRS(${DIRS})

ADD_EXECUTABLE(Sim2024 main.cpp compressible.cpp)
TARGET_LINK_LIBRARIES(Sim2024 Fvm Saving Sources)
